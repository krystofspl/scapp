= simple_form_for([@regular_training, @training_lesson]) do |f|
  = f.error_notification
  - unless @training_lesson.regular_training_lesson_realizations.empty?
    .alert.alert-warning
      %i.fa.fa-exclamation
      = t('training_lesson.form.warning_can_not_change_some_attributes')

  .form-inputs
    = f.input :description, input_html: { class: 'textarea' }
    .box.box-info
      .box-header
        %i.fa.fa-clock-o
        %h2.box-title= t('training_lesson.form.date_and_time')
      .box-body
        .row
          .col-sm-6
            = f.input :day, as: :select, collection: TrainingLesson::DAYS, disabled: (@training_lesson.regular_training_lesson_realizations.empty?) ? false : true
          .col-sm-3
            = f.input :odd_week,
              label: "#{t('training_lesson.form.odd_week')} #{ApplicationHelper.link_modal_help('trainings', 'odd_week', locale)}".html_safe
          .col-sm-3
            = f.input :even_week,
              label: "#{t('training_lesson.form.even_week')} #{ApplicationHelper.link_modal_help('trainings', 'even_week', locale)}".html_safe
        .row
          .col-sm-6
            = f.input :from, as: :time_picker, placeholder: t('dictionary.time_mask'), disabled: (@training_lesson.regular_training_lesson_realizations.empty?) ? false : true
          .col-sm-6
            = f.input :until, as: :time_picker, placeholder: t('dictionary.time_mask'), disabled: (@training_lesson.regular_training_lesson_realizations.empty?) ? false : true

        .row
          .col-sm-6
            = f.input :from_date, as: :date_picker, placeholder: t('dictionary.date_mask')
          .col-sm-6
            = f.input :until_date, as: :date_picker, placeholder: t('dictionary.date_mask')
        .row
          .col-sm-6
            = f.input :sign_in_before_start_time_limit, as: :time_picker, placeholder: t('dictionary.time_mask'),
              label: "#{t('training_lesson.form.before_start_sign_in_time_limit')} #{ApplicationHelper.link_modal_help('trainings', 'before_start_sign_in_time_limit', locale)}".html_safe
          .col-sm-6
            = f.input :excuse_before_start_time_limit, as: :time_picker, placeholder: t('dictionary.time_mask'),
              label: "#{t('training_lesson.form.before_start_excuse_time_limit')} #{ApplicationHelper.link_modal_help('trainings', 'before_start_excuse_time_limit', locale)}".html_safe

    .box.box-success
      .box-header
        %i.fa.fa-money
        %h2.box-title= t('training_lesson.form.finance')
        - if is_admin?
          .box-tools.pull-right
            = link_to t('training_lesson.form.new_currency'), new_currency_path, class: 'btn btn-success', :data => { :confirm => t('training_lesson.form.are_you_sure_new_currency') }
            = link_to t('training_lesson.form.new_vat'), new_vat_path, class: 'btn btn-success', :data => { :confirm => t('training_lesson.form.are_you_sure_new_vat') }
      .box-body
        .alert.alert-warning
          %i.fa.fa-exclamation
          =t('training_realization.new.values_for_whole_training_note')
        .row
          .col-sm-6
            = f.input :player_price_without_tax
          .col-sm-6
            = f.input :group_price_without_tax
        .row
          .col-sm-6
            = f.association :currency, disabled: (@training_lesson.regular_training_lesson_realizations.empty?) ? false : true
          .col-sm-6
            = f.association :training_vat
        .row
          .col-sm-8
            = f.input :rental_price_without_tax
          .col-sm-4
            = f.association :rental_vat

        = f.input :calculation, as: :radio_buttons, collection: TrainingLesson::PRICE_CALCULATIONS, select: 'fixed_player_price',
          label: "#{t('training_lesson.form.calculation')} #{ApplicationHelper.link_modal_help('trainings', 'calculation', locale)}".html_safe

  .form-actions
    = f.button :submit, class: 'btn btn-primary'

#modal-help.modal.fade{role: 'dialog', 'aria-hidden' => true}