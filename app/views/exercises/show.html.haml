- content_for :heading do
  = "#{@exercise.name} - #{t('exercise.show.exercise_detail').downcase}"
- breadcrumb :exercise_detail, @exercise

#action-box
  = render 'exercises/warning'
  - if can? :edit, @exercise
    - edit_link_text = raw("<i class='fa fa-pencil'></i>")+ " " + t('exercise.show.edit_exercise')
    = edit_button_exercise(@exercise, edit_link_text)
    - unless @exercise.is_in_use?
      = link_to @exercise, :method => :delete, class: 'btn btn-danger', :data => { :confirm => I18n.t('dictionary.are_you_sure') } do
        %i.fa.fa-times
        = t('exercise.show.destroy_exercise')
    - else
      = link_to '#', class: 'disabled btn btn-danger' do
        %i.fa.fa-times
        = t('exercise.show.destroy_exercise')
.row
  .col-sm-8
    .row
      .col-sm-12
        .box.box-primary
          .box-header
            %h2.box-title= t('exercise.show.detail')
          .box-body
            .col-sm-7.no-padding
              %table.table.table-condensed
                %tbody
                  - if @exercise.version > 1
                    %tr
                      %th= t('exercise.show.version')
                      %td= @exercise.version
                  %tr
                    %th= t('dictionary.type')
                    %td
                      - if !@exercise.has_sets?
                        = t('exercise.dictionary.simple_exercise')
                      - elsif @exercise.has_sets?
                        = t('exercise.dictionary.exercise_with_sets')
                  %tr
                    %th= t('exercise.show.owner')
                    %td= dash_or_object(@exercise.user).to_s
                  %tr
                    %th= t('exercise.show.accessibility')
                    %td
                      %span.label.label-info= t(@exercise.accessibility)
                  - unless @exercise.sources.blank?
                    %tr
                      %th= t('exercise.show.sources')
                      %td= dash_or_value(@exercise, :sources)
                  - unless @exercise.youtube_url.blank?
                    %tr
                      %th= t('exercise.show.youtube_url')
                      %td= link_to t('exercise.show.youtube_url_click'), @exercise.youtube_url
                  - unless @exercise.author_name.blank?
                    %tr
                      %th= t('exercise.show.author_name')
                      %td= dash_or_value(@exercise, :author_name)
                  %tr
                    %th= t('exercise.show.in_bundles')
                    - if @exercise.exercise_bundles.blank?
                      %td
                        = '-'
                    - else
                      %td
                        - @exercise.exercise_bundles.each do |exercise_bundle|
                          %span.label.label-success
                            - if can? :show, exercise_bundle
                              =link_to exercise_bundle.name, exercise_bundle
                            - else
                              = exercise_bundle.name
            .col-sm-5.no-padding
              %table#exercise_images.table.table-condensed
                %thead
                %tbody
                  %tr
                    %td
                      - unless @exercise.exercise_image.blank?
                        = image_tag @exercise.exercise_image.image.medium, class: 'center-block img-thumbnail'
            .col-sm-12.no-padding
              %table#exercise_description.table.table-condensed
                %thead
                  %tr
                    %td
                      %strong= t('dictionary.description')
                      - unless @exercise.description_long.blank?
                        =raw "(#{link_to t('exercise.show.show_detailed_description'), '#', {'data-toggle' => 'modal', 'data-target' => '#long_description', 'data-id' => @exercise.relative_url}})"
                %tbody
                  %tr
                  - unless @exercise.description.blank?
                    %td= sanitize @exercise.description
                  - else
                    %td= t('exercise.show.description_is_empty')
                  - unless @exercise.description_long.blank?
                    #long_description.modal.fade
                      .modal-dialog
                        .modal-content
                          .modal-header
                            %button.close{'aria-hiden' => 'true', 'data-dismiss' => 'modal', :type => 'button'} &times;
                            %h3.modal-title= t('exercise.show.detailed_description')
                          .modal-body
                            .modal-body-content
                              = sanitize @exercise.description_long
                          .modal-footer
            %br{:style=>'clear:both;'}
    #exercise-setups-measurements.row
      .col-sm-12
        .box.box-primary
          .box-header
            .col-sm-12.no-padding
              %h2.box-title=t('exercise.show.exercise_setups_and_measurements')
            .col-sm-12
              %ul.nav.nav-tabs
                %li.active
                  = link_to t('exercise.show.exercise_setups'), '#exercise-setups-tab', {:data => {'toggle' => 'tab'}}
                %li
                  = link_to t('exercise.show.exercise_measurements'), '#exercise-measurements-tab', {:data => {'toggle' => 'tab'}}
          .box-body.tab-content
            #exercise-setups-tab.tab-pane.fade.in.active
              - if can? :add_setup, @exercise
                = link_to new_exercise_setup_path(:exercise_code=>@exercise.code, :exercise_version=>@exercise.version), class: 'btn btn-success' do
                  %i.fa.fa-plus
                  = t('exercise.show.add_setup')
                .row.margin
              .row
                .col-sm-12
                  .well.well-sm
                    .row
                      .col-sm-12
                        %h4=t('exercise.filter.filters')
                    .row
                      = form_for_filterrific @filterrific_setups, url: {action: 'filterrific_setups'}, :as => :filterrific_setups do |f|
                        .col-sm-6
                          = f.text_field(:search_query, class: 'filterrific-periodically-observed form-control', :placeholder => t('exercise.filter.search'))
                        .col-sm-3
                          = f.select(:sorted_by, @filterrific_setups.select_options[:sorted_by],{},{:class => 'form-control'})
                        - if @exercise.has_sets?
                          .col-sm-3
                            = f.select(:type, @filterrific_setups.select_options[:type],{},{:class => 'form-control'})
                        -#.col-sm-3.no-padding
                        -#  = link_to(t('exercise.filter.reset'), reset_filterrific_url, {:class => 'btn btn-default'})
              .row
                .col-sm-12
                  #exercise_setups_data
                    = render partial: 'exercise_setups/list_table', locals: {:exercise_setups => @exercise_setups}
            #exercise-measurements-tab.tab-pane.fade.in
              .row
              - if can? :add_measurement, @exercise
                = link_to new_exercise_measurement_path(:exercise_code=>@exercise.code, :exercise_version=>@exercise.version), class: 'btn btn-success' do
                  %i.fa.fa-plus
                  = t('exercise.show.add_measurement')
                .row.margin
              .row
                .col-sm-12
                  .well.well-sm
                    .row
                      .col-sm-12
                        %h4=t('exercise.filter.filters')
                    .row
                      = form_for_filterrific @filterrific_measurements, url: {action: 'filterrific_measurements'}, :as => :filterrific_measurements do |f|
                        .col-sm-6
                          = f.text_field(:search_query, class: 'filterrific-periodically-observed form-control', :placeholder => t('exercise.filter.search'))
                        .col-sm-3
                          = f.select(:sorted_by, @filterrific_measurements.select_options[:sorted_by],{},{ :class => 'form-control'})
                        - if @exercise.has_sets?
                          .col-sm-3
                            = f.select(:type, @filterrific_measurements.select_options[:type],{},{:class => 'form-control'})
                        -#.col-sm-3
                        -#  = link_to(t('exercise.filter.reset'), reset_filterrific_url, {:class => 'btn btn-default'})
              .row
                .col-sm-12
                  #exercise-measurements-data
                    = render partial: 'exercise_measurements/list_table', locals: {:exercise_measurements => @exercise_measurements}

  .col-sm-4
    .col-sm-12
    .box.box-primary
      .box-header
        %h2.box-title= t('exercise_steps.index.heading')
      .box-body
        = '('
        = link_to t('exercise_steps.show_detailed_view'), exercise_steps_path(@exercise)
        = ')'
        .row
          .col-sm-12
            %table#exercise_steps.table.table-striped
              %thead
              %tbody
                - unless @exercise.exercise_steps.blank?
                  - @exercise.exercise_steps.rank(:row_order).each_with_index do |es,i|
                    %tr
                      %td
                        %div{style:'display:block'}
                          %div{style:'display:inline'}
                            = i+1
                          %div{style:'display:inline'}
                            %strong= es.name
                        %div{style:'display:block'}
                          = sanitize es.description
                        %div{style:'display:inline-block'}
                          %ul
                          - es.exercise_images.right.each do |img|
                            %li{style: 'display:inline-block'}
                              = image_tag img.image.small, class: 'img-rounded'

                - else
                  = t('exercise.show.exercise_steps_empty')
                  - if can? :add_steps, @exercise
                    %tr
                      %td
                        = link_to exercise_steps_path(@exercise.code, @exercise.version), class: 'btn btn-success btn-sm' do
                          %i.fa.fa-plus
                          = t('exercise.show.add_steps')



