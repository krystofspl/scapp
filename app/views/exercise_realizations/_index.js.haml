:javascript
  // PANES VISIBILITY
  var exercises = $("#exercises"), settings = $("#settings");
  function showSettingsPane(){
    exercises.hide();
    settings.fadeIn(1000);
  }
  function showExercisesPane(){
    settings.hide();
    exercises.fadeIn(1000);
  }
  function switchExercisesSettingsPanesVisibility(){
    if(exercises.css("display")!='none'){
      showSettingsPane();
    } else if(settings.css("display")!='none'){
      showExercisesPane();
    }
  }

  // GET AND REFRESH ELEMENTS
  // Refresh/initialize Exercises draggable
  function refreshExercisesDraggable(){
    $('.draggable').draggable({
      appendTo: '#owl-carousel',
      forceHelperSize: true,
      connectToSortable: $('.player-plan'),
      opacity: 0.8,
      cursorAt: { left: 5 , top: 5},
      helper: 'clone',
      start: function(e, ui){
        $(ui.helper).removeClass('col-sm-12');
        $(ui.helper).addClass('draggable-helper');
      }
    });
  }
  function getPlanIdForRealization(realizationId){
    var realization = $('.realization[data-realization-id='+realizationId+']');
    return realization.parent().data('plan-id');
  }
  // Refreshes whole plan with all realizations with current data
  function refreshRealizationsInPlan(plan){
    var plan = $('ul[data-plan-id='+plan+']');
    var planParent = plan.parent()
    $.ajax({
      url : '#{url_for :controller => "exercise_realizations", :action => "list_exercise_realizations"}',
      data: { plan_id : plan.data('plan-id') },
      type: 'GET',
      success: function(data){
        // Replace ExerciseRealization html with updated plan
        planParent.html(data);
        // Exercises .draggable needs to get refreshed,
        // otherwise it doesn't recognize changed .player-plan sortables
        refreshExercisesDraggable();
      }
    });
  }


  // TWEAKS
  // Make elements with string selector the same height
  function makeElementsSameHeight(selector){
    // Get title box with max height
    var maxHeight = Math.max.apply(null, $(selector).map(function ()
      {return $(this).innerHeight();}).get());
    // Set all heights accordingly
    $(selector).css('min-height', maxHeight);
  }
  // Prevent enter keypress in forms (it triggers html request by default)
  function preventFormEnterKeypress(selector){
    $(selector).on("keypress", function (e) {
      if (e.keyCode == 13) {
        return false;
      }
    });
  }

  // DOCUMENT READY
  $(function() {
    // CSS
    // (why?) this breaks drag+drop, probably css issue
    //makeElementsSameHeight(".player-plan-wrapper .title");
    //makeElementsSameHeight("#exercises-wrapper li");

    $("ul, li").disableSelection();

    // CAROUSEL INIT
    var owl = $('.owl-carousel');
    owl.owlCarousel({
      margin: 5,
      //onTranslated: owlCarouselCallback, -> need to fire this on initialization as well
      responsive: {
        0: {items: 1}, 900: {items: 2}, 1200: {items: 3}, 1600: {items: 4}
      }
    });
    // Set before+after plan counts for carousel arrows
    // Currently disabled, because onInitialization doesnt provide "page" event,
    // which is needed, so it only works when a page has been changed now
    function owlCarouselCallback(event){
      var prevText = $('.owl-carousel-before span');
      var nextText = $('.owl-carousel-after span');
      if(event.page.index>0){
        prevText.html(event.page.index);
      } else {
        prevText.html('');
      }
      if(event.page.count-event.page.index-1>0){
        nextText.html(event.page.count-event.page.index-1);
      } else {
        nextText.html('');
      }
    }
    // CAROUSEL PREV, NEXT BUTTONS
    $('.owl-carousel-prev').click(function() {owl.trigger('prev.owl.carousel');});
    $('.owl-carousel-next').click(function() {owl.trigger('next.owl.carousel');});

    // SCROLLABLE LEFT PANE
    $(window).scroll(function() {
      var offset = $("#right-pane").offset().top, scrollTop = $(this).scrollTop();
      if(scrollTop>offset){
        $('#left-pane > .box').css('top', scrollTop-offset+10 + 'px');
      } else if(scrollTop<=offset){
        $('#left-pane > .box').css('top', '0');
      }
    });

    // PREVENT ENTER KEYPRESS ON LOADED FORMS
    preventFormEnterKeypress('form');
  });